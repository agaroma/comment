{"version":3,"sources":["ToDo.js","ToDoForm.js","App.js","reportWebVitals.js","index.js"],"names":["ToDo","todo","toggleTask","removeTask","className","complete","onClick","id","task","ToDoForm","addTask","useState","userInput","setUserInput","handleSubmit","e","preventDefault","onSubmit","value","type","onChange","currentTarget","onKeyDown","key","placeholder","App","todos","setTodos","filter","handleToggle","map","length","newItem","Math","random","toString","substr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAkBeA,MAhBf,YAAiD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC9B,OACI,sBAAmBC,UAAU,YAA7B,UACI,qBACIA,UAAWH,EAAKI,SAAW,mBAAqB,YAChDC,QAAS,kBAAMJ,EAAWD,EAAKM,KAFnC,SAIKN,EAAKO,OAEV,qBAAKJ,UAAU,cAAcE,QAAS,kBAAMH,EAAWF,EAAKM,KAA5D,iBAPMN,EAAKM,KC+BRE,MAjCf,YAAgC,IAAZC,EAAW,EAAXA,QAChB,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAe,SAACC,GAClBA,EAAEC,iBACFN,EAAQE,GACRC,EAAa,KASjB,OACI,uBAAMI,SAAUH,EAAhB,UACI,uBACII,MAAON,EACPO,KAAK,OACLC,SArBS,SAACL,GAClBF,EAAaE,EAAEM,cAAcH,QAqBrBI,UAZW,SAACP,GACP,UAAVA,EAAEQ,KACDT,EAAaC,IAWTS,YAAY,+GAEhB,0FCuBGC,MAjDf,WACI,MAA0Bd,mBAAS,IAAnC,mBAAOe,EAAP,KAAcC,EAAd,KAaMxB,EAAa,SAACI,GAChBoB,EAAS,YAAID,EAAME,QAAO,SAAC3B,GAAD,OAAUA,EAAKM,KAAOA,QAG9CsB,EAAe,SAACtB,GAClBoB,EAAS,YACFD,EAAMI,KAAI,SAAC7B,GAAD,OACTA,EAAKM,KAAOA,EAAZ,2BAAsBN,GAAtB,IAA4BI,UAAWJ,EAAKI,WAA5C,eAA6DJ,SAMzE,OACI,sBAAKG,UAAU,MAAf,UACI,iCACI,0FAAgBsB,EAAMK,YAE1B,cAAC,EAAD,CAAUrB,QA7BF,SAACE,GACb,GAAGA,EAAW,CACV,IAAMoB,EAAU,CACZzB,GAAI0B,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAE,GACxC5B,KAAMI,EACNP,UAAU,GAEdsB,EAAS,GAAD,mBAAKD,GAAL,CAAYM,SAuBnBN,EAAMI,KAAI,SAAC7B,GACR,OACI,cAAC,EAAD,CACIA,KAAMA,EAENC,WAAY2B,EACZ1B,WAAYA,GAFPF,EAAKM,WC7BnB8B,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCApBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.45937140.chunk.js","sourcesContent":["\n\nfunction ToDo({ todo, toggleTask, removeTask }) {\n    return (\n        <div key={todo.id} className=\"item-todo\">\n            <div\n                className={todo.complete ? \"item-text strike\" : \"item-text\"}\n                onClick={() => toggleTask(todo.id)}\n            >\n                {todo.task}\n            </div>\n            <div className=\"item-delete\" onClick={() => removeTask(todo.id)}>\n                x\n            </div>\n        </div>\n    )\n}\n\nexport default ToDo","import { useState } from 'react'\n\nfunction ToDoForm({ addTask }) {\n    const [userInput, setUserInput] = useState('')\n\n    const handleChange = (e) => {\n        setUserInput(e.currentTarget.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        addTask(userInput)\n        setUserInput(\"\")\n    }\n\n    const handleKeyPress = (e) => {\n        if(e.key === \"Enter\") {\n            handleSubmit(e)\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                value={userInput}\n                type=\"text\"\n                onChange={handleChange}\n                onKeyDown={handleKeyPress}\n                placeholder=\"Введіть коментарій...\"\n            />\n            <button>Зберегти</button>\n        </form>\n    )\n}\n\nexport default ToDoForm","import { useState } from 'react'\nimport ToDo from './ToDo'\nimport ToDoForm from './ToDoForm'\n\nfunction App() {\n    const [todos, setTodos] = useState([])\n\n    const addTask = (userInput) => {\n        if(userInput) {\n            const newItem = {\n                id: Math.random().toString(36).substr(2,9),\n                task: userInput,\n                complete: false\n            }\n            setTodos([...todos, newItem])\n        }\n    }\n\n    const removeTask = (id) => {\n        setTodos([...todos.filter((todo) => todo.id !== id)])\n    }\n\n    const handleToggle = (id) => {\n        setTodos([\n            ...todos.map((todo) =>\n                todo.id === id ? { ...todo, complete: !todo.complete } : {...todo }\n            )\n        ])\n    }\n\n\n    return (\n        <div className=\"App\">\n            <header>\n                <h1>Коментарі: {todos.length}</h1>\n            </header>\n            <ToDoForm addTask={addTask} />\n            {todos.map((todo) => {\n                return (\n                    <ToDo\n                        todo={todo}\n                        key={todo.id}\n                        toggleTask={handleToggle}\n                        removeTask={removeTask}\n                    />\n                )\n            })}\n        </div>\n    );\n\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}